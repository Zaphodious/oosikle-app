import { AboutSlint, Button, VerticalBox, ListView, ScrollView, HorizontalBox } from "std-widgets.slint";
import { PlistSelectorDemo } from "plistdemo.slint";
import {DeviceDisplay, ActionItem, DemoData, Playlist} from "datamodel.slint";
import {TButton} from "stylebutton.slint";
import {OStyle} from "styleglobal.slint";
import { BrutalPanel } from "brutalpanel.slint";
import { BrutalButton } from "brutalbutton.slint";
import { BrutalLineEntry  } from "brutallineentry.slint";
import { BrutalDevicePanel } from "brutaldevicepanel.slint";
import { BrutalPlaylistView } from "brutalplistview.slint";
import { BrutalBrushes } from "brutalcolors.slint";
import { BrutalSelectedPlaylistView } from "brutalselectedplaylistview.slint";
import { BrutalViewContent } from "brutalview_content.slint";

export component MainLayoutDemo inherits Window {
    min-width: 800px;
    //min-height: 480px;
    no-frame: false;
    in-out property <DeviceDisplay> active_device: DemoData.active_device;
    in property <[DeviceDisplay]> devices: DemoData.devices;
    in property <DeviceDisplay> pc_device: DemoData.pc_device;
    in-out property <Playlist> selected_playlist: DemoData.sadsong_playlist;
    always-on-top: false;
    in-out property <bool> commander_pane_minimized: false;
    full-screen: false;
    background: BrutalBrushes.AppColorsBackground.tertiary;
    private property <int> view-ind: 0;

    private property <bool> device_expanded: false;

    measure := Rectangle {
        height: parent.height;
        width: parent.width;
    }

    /*
    taskbar := BrutalPanel {
        height: 100%;
        width: 100%;
        x: 0;
        y: 0;
        background: BrutalBrushes.AppColorsBackground.primary;
    }
    */



    VerticalLayout {

    Rectangle {

        view-strip := HorizontalLayout {
            y: 0;
            x: measure.width * -view-ind;

            BrutalViewContent {
                width: measure.width;
            }

            BrutalPanel {
                width: measure.width;
                background: black;
            }

            animate x { duration: 500ms;
                easing: ease-in-out-back;
            }
        }
        }
        HorizontalLayout {
            BrutalButton { text: "foo"; clicked => {view-ind = 0}}
            BrutalButton { text: "bar"; clicked => {view-ind = 1}}
            BrutalButton { text: "baz"; clicked => {view-ind = 2}}
        }

    }
}
