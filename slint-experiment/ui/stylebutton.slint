
import {OStyle, OButtonType} from "styleglobal.slint";

export component TButton {
    in property <int> role: OButtonType.Normal;
    in property <bool> disabled: false;
    in property <bool> highlighted: false;
    out property <bool> has-hover: !disabled && toucharea.has-hover;
    out property <bool> pressed: !disabled && toucharea.pressed;

    callback clicked <=> toucharea.clicked;

    toucharea := TouchArea {
        mouse-cursor: disabled ? MouseCursor.default : MouseCursor.pointer;
        the_rect := Rectangle {
            border-radius: OStyle.buttons[role].active.border-radius;
            border-width: OStyle.buttons[0].active.border-width;
            border-color: OStyle.buttons[0].active.border-brush;
            background: OStyle.buttons[0].active.background-brush;
            background_img := Image {
                image-fit: contain;
                width: 100%;
                height: 100%;
                source: OStyle.buttons[0].active.image;
            }
            @children
        }
    }

    states [
        disabled when self.disabled: {
            background_img.source: OStyle.buttons[0].disabled.image;
            the_rect.border-radius: OStyle.buttons[0].disabled.border-radius;
            the_rect.border-width: OStyle.buttons[0].disabled.border-width;
            the_rect.border-color: OStyle.buttons[0].disabled.border-brush;
            the_rect.background: OStyle.buttons[0].disabled.background-brush;
        }
        up-highlighted when highlighted && !toucharea.pressed && !toucharea.has-hover: {
            background_img.source: OStyle.buttons[0].highlighted.image;
            the_rect.border-radius: OStyle.buttons[0].highlighted.border-radius;
            the_rect.border-width: OStyle.buttons[0].highlighted.border-width;
            the_rect.border-color: OStyle.buttons[0].highlighted.border-brush;
            the_rect.background: OStyle.buttons[0].highlighted.background-brush;
        }
        up when !toucharea.pressed && !toucharea.has-hover: {
            background_img.source: OStyle.buttons[0].active.image;
            the_rect.border-radius: OStyle.buttons[0].active.border-radius;
            the_rect.border-width: OStyle.buttons[0].active.border-width;
            the_rect.border-color: OStyle.buttons[0].active.border-brush;
            the_rect.background: OStyle.buttons[0].active.background-brush;
        }
        hover when !toucharea.pressed && toucharea.has-hover: {
            background_img.source: OStyle.buttons[0].hover.image;
            the_rect.border-radius: OStyle.buttons[0].hover.border-radius;
            the_rect.border-width: OStyle.buttons[0].hover.border-width;
            the_rect.border-color: OStyle.buttons[0].hover.border-brush;
            the_rect.background: OStyle.buttons[0].hover.background-brush;
        }
        pressed when toucharea.pressed: {
            background_img.source: OStyle.buttons[0].pressed.image;
            the_rect.border-radius: OStyle.buttons[0].pressed.border-radius;
            the_rect.border-width: OStyle.buttons[0].pressed.border-width;
            the_rect.border-color: OStyle.buttons[0].pressed.border-brush;
            the_rect.background: OStyle.buttons[0].pressed.background-brush;
        }    
    ]
}
