import { BrutalPanel } from "brutalpanel.slint";
import { BrutalButton } from "brutalbutton.slint";
import { BrutalLineEntry  } from "brutallineentry.slint";
import {DeviceDisplay, ActionItem, DemoData} from "datamodel.slint";
import { ScrollView, ListView } from "std-widgets.slint";

export component BrutalDevicePanel inherits BrutalPanel {
    in-out property <DeviceDisplay> active_device: DemoData.active_device;
    in property <[DeviceDisplay]> devices: DemoData.devices;
    in property <DeviceDisplay> pc_device: DemoData.pc_device;
    x: 0;
    y: 0;
    width: deivce_hover_area.has-hover ? 240px : 68px;
    height: 100%;

    animate width {
        easing: ease-in-quad;
        duration: 50ms;
    }

    deivce_hover_area := TouchArea {
        width: 100%;

        BrutalButton {
            y: 0;
            selectable: true;
            selected: pc_device.id == active_device.id;
            height: 50px;
            width: deivce_hover_area.width;
            icon: pc_device.icon;
            text: pc_device.name;
            clicked => {
                active_device = pc_device;
            }
        }

        ListView {
            y: 50px;
            width: deivce_hover_area.width - 2px;
            horizontal-scrollbar-policy: ScrollBarPolicy.always-off;
            vertical-scrollbar-policy: deivce_hover_area.has-hover ? always-on : always-off;
            height: deivce_hover_area.height - 10px - 50px;
                for device in devices: BrutalButton {
                    selectable: true;
                    selected: device.id == active_device.id;
                    height: 50px;
                    width: deivce_hover_area.has-hover ? deivce_hover_area.width - 10px : deivce_hover_area.width;
                    icon: device.icon;
                    text: device.name;
                    clicked => {
                        active_device = device;
                    }
                }
            }
        }
}
